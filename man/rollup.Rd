% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dplyrExtend.R
\name{rollup}
\alias{rollup}
\title{rollup add a total row to a dataframe}
\usage{
rollup(.data, ..., label = "Total")
}
\arguments{
\item{.data}{A tbl. All main verbs are S3 generics and provide methods
for \code{\link[dplyr:tbl_df]{tbl_df()}}, \code{\link[dtplyr:tbl_dt]{dtplyr::tbl_dt()}} and \code{\link[dbplyr:tbl_dbi]{dbplyr::tbl_dbi()}}.}

\item{...}{Name-value pairs of summary functions. The name will be the
name of the variable in the result. The value should be an expression
that returns a single value like \code{min(x)}, \code{n()}, or \code{sum(is.na(y))}.

The arguments in \code{...} are automatically \link[rlang:quo]{quoted} and
\link[rlang:eval_tidy]{evaluated} in the context of the data
frame. They support \link[rlang:quasiquotation]{unquoting} and
splicing. See \code{vignette("programming")} for an introduction to
these concepts.}

\item{label}{what should the total row be labeled as? Only valid if the
first grouping variables is a factor or character.}
}
\value{
An object of the same class as .data. One grouping level will be
  dropped.
}
\description{
This function is inteded to extend the `summarise` function in dplyr by
binding (using `bind_row`) a "Total" row to the dataframe. This is especially
useful when generating reports that require a summary line. It also
appropriatly scales everything to make sure that aggregate functions such as
`mean` are taken on the raw data and not the aggregate data.
}
\examples{
library(dplyr)

# cyl is a number so it's not possible to label the "Total Row"
mtcars \%>\%
  group_by(cyl) \%>\%
  rollup(mean = mean(disp), n = n())

# Casting cyl to a character allows automatic labeling of the final row.
mtcars \%>\%
  mutate(cyl = as.character(cyl)) \%>\%
  group_by(cyl) \%>\%
  rollup(sum = sum(disp),
         mean = mean(disp),
         sd = sd(disp),
         n = n())

# Set label = NA to not label the last row (same as if it's a number)
mtcars \%>\%
  mutate(cyl = as.character(cyl)) \%>\%
  group_by(cyl) \%>\%
  rollup(sum = sum(disp),
         mean = mean(disp),
         sd = sd(disp),
         n = n(),
         label = NA)
}
