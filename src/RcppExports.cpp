// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// windowThreshold
LogicalVector windowThreshold(NumericVector meas_col, NumericVector meas_norm, NumericVector time_col, double look_backward, double look_forward);
RcppExport SEXP _vakdr_windowThreshold(SEXP meas_colSEXP, SEXP meas_normSEXP, SEXP time_colSEXP, SEXP look_backwardSEXP, SEXP look_forwardSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type meas_col(meas_colSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type meas_norm(meas_normSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type time_col(time_colSEXP);
    Rcpp::traits::input_parameter< double >::type look_backward(look_backwardSEXP);
    Rcpp::traits::input_parameter< double >::type look_forward(look_forwardSEXP);
    rcpp_result_gen = Rcpp::wrap(windowThreshold(meas_col, meas_norm, time_col, look_backward, look_forward));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_vakdr_windowThreshold", (DL_FUNC) &_vakdr_windowThreshold, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_vakdr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
